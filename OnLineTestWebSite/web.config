<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
	</configSections>
	<log4net>
		<!---布置文件的时候需要修改两个地方：
1、应用程序池-托管管道模式=经典
2、应用程序池-高级设置-启用32位应用程序=true
-->
		<!--下面定义LOG4NET的参数     
  private static ILog loger=LogManager.GetLogger(typeof(TestLog4Net)); 
    logger.Debug(“查询完成”); 
    下面定义日志文件的输出参数
    基中的优先级关系：
    off>
    fatal(isfatalenabled,logger.fatal)>
    error(iserrorenbaled,logger.error)>
    warn(IsWarnEnabled,logger.warn)>
    info(IsInfoEnabled,logger.info)>
    debug(IsDebugEnabled,logger.debug)>
    all
    None>Fatal>ERROR>WARN>DEBUG>INFO>ALL
    -->
		<root>
			<level value="All"/>
			<appender-ref ref="AllRollingFileAppender"/>
			<appender-ref ref="InfoRollingFileAppender"/>
			<appender-ref ref="DebugRollingFileAppender"/>
			<appender-ref ref="WarnRollingFileAppender"/>
			<appender-ref ref="ErrorRollingFileAppender"/>
			<appender-ref ref="FatalRollingFileAppender"/>
		</root>
		<appender name="AllRollingFileAppender" type="log4net.Appender.RollingFileAppender" LEVEL="ALL">
			<file value="log\all.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="10"/>
			<maximumFileSize value="1024KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level [%rms used] - %message%newline"/>
			</layout>
			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="ALL"/>
				<param name="LevelMax" value="ALL"/>
			</filter>
		</appender>
		<appender name="InfoRollingFileAppender" type="log4net.Appender.RollingFileAppender" LEVEL="INFO">
			<file value="log\info.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="10"/>
			<maximumFileSize value="1024KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level [%logger] [%property{NDC}] - %message%newline"/>
			</layout>
			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="INFO"/>
				<param name="LevelMax" value="INFO"/>
			</filter>
		</appender>
		<appender name="DebugRollingFileAppender" type="log4net.Appender.RollingFileAppender" LEVEL="DEBUG">
			<file value="log\debug.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="10"/>
			<maximumFileSize value="1024KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level [%logger] [%property{NDC}] - %message%newline"/>
			</layout>
			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="DEBUG"/>
				<param name="LevelMax" value="DEBUG"/>
			</filter>
		</appender>
		<appender name="WarnRollingFileAppender" type="log4net.Appender.RollingFileAppender" LEVEL="WARN">
			<file value="log\warn.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="10"/>
			<maximumFileSize value="1024KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level [%logger] [%property{NDC}] - %message%newline"/>
			</layout>
			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="WARN"/>
				<param name="LevelMax" value="WARN"/>
			</filter>
		</appender>
		<appender name="ErrorRollingFileAppender" type="log4net.Appender.RollingFileAppender" LEVEL="ERROR">
			<file value="log\error.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="10"/>
			<maximumFileSize value="1024KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level [%logger] [%property{NDC}] - %message%newline"/>
			</layout>
			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="ERROR"/>
				<param name="LevelMax" value="ERROR"/>
			</filter>
		</appender>
		<appender name="FatalRollingFileAppender" type="log4net.Appender.RollingFileAppender" LEVEL="FATAL">
			<file value="log\fatal.log"/>
			<appendToFile value="true"/>
			<rollingStyle value="Size"/>
			<maxSizeRollBackups value="10"/>
			<maximumFileSize value="1024KB"/>
			<staticLogFileName value="true"/>
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%date [%thread] %-5level [%logger] [%property{NDC}] - %message%newline"/>
			</layout>
			<filter type="log4net.Filter.LevelRangeFilter">
				<param name="LevelMin" value="FATAL"/>
				<param name="LevelMax" value="NONE"/>
			</filter>
		</appender>
	</log4net>
	<appSettings>
		<!-- 连接字符串是否加密 -->
		<!--add key="ConStringEncrypt" value="false"/-->
		<add key="ConStringEncrypt" value="true"/>
		<!-- 数据库连接字符串,（如果采用加密方式，上面一项要设置为true；加密工具，可在官方下载，
     如果使用明文这样server=127.0.0.1;database=.....,上面则设置为false。 -->
		<add key="ConnectionString" value="server=127.0.0.1;database=OnLineTest;uid=sa;pwd=Ashulovejuan1"/>
		<!--其它模块连接字符串，可以不断增加以便同一个项目支持连接多个数据库。如果没有，可以删除该行-->
		<add key="ConnectionString2" value="server=127.0.0.1;database=OnLineTest;uid=sa;pwd=Ashulovejuan1"/>
		<add key="CreateIndexDirectionPath" value="D:/index"/>
		<!--用于发送邮件的地址信息-->
		<!--value值的顺序 From,FromName,UserName,Password,Server -->
		<!--add key="SendMailClient" value="yxshu82@163.com,船员在线考试系统,yxshu82@163.com,Ashulovejuan1,smtp.163.com"/-->
		<add key="SendMailClient" value="1HkthBCUfUzVtQRpm98UrCZe709+s7A2+rK8ts2/VedIT63sb+yD4KVsk5vDEId+qBzuiHtSq8Z4U7bjzOMdvnNrrV6DEOh3aRjnnzdKmGLR0piyGhPi3A=="/>
	</appSettings>
	<connectionStrings>
		<!--
    <add name="connString" connectionString="Data Source=XZ-20141216DRON;Initial Catalog=OnLineTest;Integrated Security=True"/>
    <add name="connStringByUidPwd" connectionString="Data Source=XZ-20141216DRON;Initial Catalog=OnLineTest;User ID=sa;Password=Ashulovejuan1">
    <add name="connString" connectionString="RIRSroDyB1HgEq33Bp4MNgfkfTjjujXNQns6EM443W/Ec77Vubel87ym+xaCI1MK7NcFc8WHADYuLyqpQ8DKITp6KfRyqFAY"/>
    <add name="connStringByUidPwd" connectionString="Ii4vMbr586RAx6XQyrDa4Hbxdj82mJZ7Cif3jEck9EqZFgQbzS0e4YHeFo2cmuePo95sCEk6DbWWasBiqFiAwFNMfw7t0v3MbNnW5xSYQa/ATLgNS5HA0tnAt+qjW1z4"/>
    <add name="connStringSqlCache" connectionString="Data Source=XZ-20141216DRON;Initial Catalog=OnLineTest;User ID=sa;Password=Ashulovejuan1"/>
 -->
		<add name="connString" connectionString="Ii4vMbr586QPqlGVSUGQ5mtaMGHkQFJkIIgV9pcPBOp/70QQ83KuHWlMRlpMxo/twSBIf57dX4M3+w2jhvkLsjuRPN8iMM6b"/>
		<add name="connStringByUidPwd" connectionString="Ii4vMbr586QPqlGVSUGQ5mtaMGHkQFJkIIgV9pcPBOp/70QQ83KuHf0isrm3bns2GebUWZHqoeKB7L0TiBKUUboM3/2JwYq8GGk8qq2A9bI="/>
		<add name="connStringSqlCache" connectionString="Data Source=.;Initial Catalog=OnLineTest;User ID=sa;Password=Ashulovejuan1"/>
		<!--
        <add name="connString" connectionString="Data Source=pc-20140413;Initial Catalog=OnLineTest;Integrated Security=True"/>
        <add name="connStringByUidPwd" connectionString="Data Source=PC-201403031325;Initial Catalog=OnLineTest;User ID=sa;Password=Ashulovejuan1"/>
    
    <add name="connString" connectionString="Ii4vMbr586Rv5683shybUmgmqjir/yO1NMNGqwc2GsUVrqpN6n6npY54buXgrF6qzzVNStegN/7/EJNgS0p4/jdZ3h8YvN5btLpPMnsVaEI="/>
    <add name="connStringByUidPwd" connectionString="Ii4vMbr586R+ffvSYWUOz+3XPQQ2E4XgZiZGW5UsWRIqTUmbeZQXKdCRGx92iA3soW/wtMk1N6hLb1rC+6Cg5gd7ab5C2Qjw0IwZ79SI/JLaFJMdEGcxs05FcAPH/LZa"/>
        <add name="connStringSqlCache" connectionString="Data Source=PC-201403031325;Initial Catalog=OnLineTest;User ID=sa;Password=Ashulovejuan1"/>
    -->
	</connectionStrings>
	<system.web>
		<httpRuntime executionTimeout="3600" maxRequestLength="1048576"/>
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="Microsoft.mshtml, Version=7.0.3300.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<!--<add assembly="Microsoft.ReportViewer.WebForms, Version=9.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
        <add assembly="Microsoft.ReportViewer.Common, Version=9.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>-->
			</assemblies>
			<buildProviders>
				<add extension=".rdlc" type="Microsoft.Reporting.RdlBuildProvider, Microsoft.ReportViewer.Common, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
			</buildProviders>
		</compilation>
		<!--对于错误页的处理
    <customErrors mode="On" defaultRedirect="error.aspx?code=1005"/>
    -->
		<!--数据缓存依赖项-->
		<!--
        第一步：开启数据库缓存通知功能，命令如下：
        命令：
        cd C:\Windows\Microsoft.NET\Framework\v2.0.50727
        aspnet_regsql -C "Data Source=YXSHU-PC;Initial Catalog=OnLineTest;Integrated Security=True" -ed -et -t "Authority"
        aspnet_regsql -C "Data Source=YXSHU-PC;Initial Catalog=OnLineTest;Integrated Security=True" -ed -et -t "UserAuthority"
        aspnet_regsql -C "Data Source=YXSHU-PC;Initial Catalog=OnLineTest;Integrated Security=True" -ed -et -t "UserGroup"
        aspnet_regsql -C "Data Source=YXSHU-PC;Initial Catalog=OnLineTest;Integrated Security=True" -ed -et -t "UserRank"
        
        
        或者
        
        C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regsql -S localhost -E -d OnLineTest -ed 
        C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regsql -S localhost -E -d OnLineTest -t Authority -et 
        C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regsql -S localhost -E -d OnLineTest -t UserAuthority -et 
        C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regsql -S localhost -E -d OnLineTest -t UserGroup -et 
        C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\aspnet_regsql -S localhost -E -d OnLineTest -t UserRank -et 
        命令执行后，在指定的数据库中会多出一个AspNet_SqlCacheTablesForChangeNotification表
        
        
        注意：
            要使得7.0或者2000版本以上的SQLServer支持SqlCacheDependency特性，需要对数据库服务器执行相关的配置。
            有两种方法配置SQLServer：
            一 使用aspnet_regsql命令行工具，
            二 使用SqlCacheDependencyAdmin类。
            例如：
            aspnet_regsql -S "server" -E -d "database" –ed  或者
            aspnet_regsql -S "server" -E -d "database" -et -t "table"
            如果是Sql验证的话要把-E换成，-U (用户名),-P (密码)
            以下是该工具的命令参数说明：
            -? 显示该工具的帮助功能；
            -S 后接的参数为数据库服务器的名称或者IP地址；
            -U 后接的参数为数据库的登陆用户名；
            -P 后接的参数为数据库的登陆密码；
            -E 使用当前登录用户的 Windows 集成认证进行身份验证。
            -d 后接参数为对哪一个数据库采用SqlCacheDependency功能；
            -C 连接数据库的连接字符串。如果您指定服务器(-S)和登录（-U和-P，或 -E）信息，则此选项不是必需的，因为连接字符串已经包含这些信息。
            -t 后接参数为对哪一个表采用SqlCacheDependency功能；
            -ed 允许对数据库使用SqlCacheDependency功能；
            -dd 禁止对数据库采用SqlCacheDependency功能；
            -et 允许对数据表采用SqlCacheDependency功能；
            -dt 禁止对数据表采用SqlCacheDependency功能；
            -lt 列出当前数据库中有哪些表已经采用sqlcachedependency功能。
         第二步：在配置文件中设置如下值：
         第三步：在页面使用:
        -->
		<caching>
			<sqlCacheDependency enabled="true" pollTime="6000">
				<databases>
					<add name="OnLineTest" connectionStringName="connStringSqlCache"/>
				</databases>
			</sqlCacheDependency>
		</caching>
		<identity impersonate="true"/>
		<authentication mode="Forms">
			<forms name="forums" path="/" loginUrl="Login.aspx" protection="All" timeout="40"/>
		</authentication>
		<httpHandlers>
			<add path="Reserved.ReportViewerWebControl.axd" verb="*" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" validate="false"/>
		</httpHandlers>
		<httpModules>
			<add name="myHttpModule" type="Modules.Module,Modules"/>
			<!-- 参数的意义  name:自定义一个名称  type:有两个参数，第一个参数是处理的类；第二个参数是程度集名称-->
		</httpModules>
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
	</system.web>
	<system.webServer>
		<modules>
			<add name="myHttpModule" type="Modules.Module,Modules"/>
			<!-- 参数的意义  name:自定义一个名称  type:有两个参数，第一个参数是处理的类；第二个参数是程度集名称-->
			<remove name="Session"/>
			<add name="Session" type="System.Web.SessionState.SessionStateModule"/>
		</modules>
		<validation validateIntegratedModeConfiguration="false"/>
	</system.webServer>
</configuration>