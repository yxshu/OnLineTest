<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BLL</name>
    </assembly>
    <members>
        <member name="T:OnLineTest.BLL.AuthorityManager">
            <summary>
            权限实例
            </summary>
            <summary>
            权限实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.Exists(System.String,System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.Add(OnLineTest.Model.Authority)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.Update(OnLineTest.Model.Authority)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.Delete(System.String,System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetModel(System.String)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetModel(System.Int32,System.Nullable{System.Int32})">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.ExistsChild(System.Int32)">
            <summary>
            该记录是否存在子权限
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.GetMinId">
            <summary>
            得到最小ID，如果不成功则返回-1
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.OperateAuthoritybyTran(OnLineTest.Model.Authority,System.String,System.Int32@)">
            <summary>
            利用存储过程来处理Authority的增、删、改操作
            model:add,delete,update
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.AuthorityManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.ChapterManager">
            <summary>
            教材章节表
            </summary>
            <summary>
            教材章节表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.Add(OnLineTest.Model.Chapter)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.Update(OnLineTest.Model.Chapter)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OnLineTest.BLL.ChapterManager.getStructionChapterModel_by_TextBookId(System.Int32)" -->
        <member name="M:OnLineTest.BLL.ChapterManager.getChapterChildren(OnLineTest.Model.Chapter,System.Collections.Generic.List{OnLineTest.Model.Chapter},System.Int32)">
            <summary>
            利用递归查询子节点
            </summary>
            <param name="chapter"></param>
            <param name="temp"></param>
            <param name="MaxDeep"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.getLowChapter(OnLineTest.Model.Chapter,System.Collections.Generic.List{OnLineTest.Model.Chapter})">
            <summary>
            在一个目录集合中查到某个目录的所有底层子目录
            </summary>
            <param name="c">目录</param>
            <param name="list">目录的集合</param>
            <returns>所有底层目录的集合</returns>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.getAllLowChapterAndDefaultCount(System.Collections.Generic.List{OnLineTest.Model.Chapter},System.Int32)">
            <summary>
            求出一个目录集合的所有底层目录并根据试题的总量附上每章节的默认试题量
            </summary>
            <param name="list">目录集合</param>
            <param name="QuestionCount">试题试题总量</param>
            <returns>返回一个Dictionary,字典中的键值对是 章节对象，此章节对应的试题量</returns>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.getAllLowChapter(System.Collections.Generic.List{OnLineTest.Model.Chapter})">
            <summary>
            求出一个目录集合的所有底层目录
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.getAllLowChapterByTestbookId(System.Int32)">
            <summary>
            求出某个textbookid下的所有底层目录
            </summary>
            <param name="textbookid"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.ChapterManager.GetModel(System.Int32,System.String)">
            <summary>
            根据书本编号和章节标题查询
            </summary>
            <param name="textbookid">书的编号</param>
            <param name="chaptername">章节标题</param>
            <returns>返回查询到的集合</returns>
        </member>
        <member name="T:OnLineTest.BLL.myComparer">
            <summary>
            自定义比较器
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.CommentManager">
            <summary>
            用户对试题的评论实例
            </summary>
            <summary>
            用户对试题的评论实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.Add(OnLineTest.Model.Comment)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.Update(OnLineTest.Model.Comment)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetList(System.Int32,System.Int32,System.Int32)">
            <summary>
            联合查询用户发表的评论,并将外链实例化以后,将每一条记录填充到一个字典当中,最终汇总到一个list当中,如果没有评论,则返回null
            </summary>
            <param name="pagesize">前多少条记录</param>
            <param name="userid">用户ID</param>
            <param name="step">页码值，注意从0开始计数</param>
            <returns>有可能为NULL</returns>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetListByQuestionId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pagesize"></param>
            <param name="QuestionId"></param>
            <param name="pagenum"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.GetListByQuestionId(System.Int32,System.Int32,System.Int32)">
            <summary>
            根据给定的questionid获取试题评论
            </summary>
            <param name="pagesize">页容量</param>
            <param name="questionid">questionid</param>
            <param name="pagenum">页码</param>
            <returns>dataset</returns>
        </member>
        <member name="M:OnLineTest.BLL.CommentManager.DsToList(System.Data.DataSet,System.Int32)">
            <summary>
            将ds变换成LIST
            </summary>
            <param name="ds"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.SetCacheBySql(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            设置依赖SQL数据库缓存
            </summary>
            <param name="CacheKey">名称</param>
            <param name="objObject">值</param>
            <param name="dep">依赖项，可以使用本类中的initialSqlCacheDependency(表名称)</param>
        </member>
        <member name="M:OnLineTest.BLL.common.GetCacheBySql(System.String)">
            <summary>
            从缓存中取数据
            </summary>
            <param name="CacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.initalSqlCacheDependency(System.Collections.Generic.List{System.String})">
            <summary>
            初始化依赖项
            </summary>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.logger">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.GetMD5(System.String)">
            <summary>
            将指定字符串进行MD5加密
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.common.MakeCode(System.Int32)">
            <summary> 
            生成验证码字符串 
            </summary> 
            <param name="codeLen">验证码字符长度</param> 
            <returns>返回验证码字符串</returns> 
        </member>
        <member name="M:OnLineTest.BLL.common.CreateValidCode(System.Int32,System.Int32,System.String@)">
            <summary> 
             生成验证码图片流 
             </summary> 
             <param name="checkCode">验证码字符串的长度</param> 
             <returns>返回验证码图片流</returns> 
        </member>
        <member name="M:OnLineTest.BLL.common.ServerTransfer(System.String,System.Nullable{System.Int32},System.Exception,System.String)">
            <summary>
            要跳转的链接
            </summary>
            <param name="TransferPage">跳转的页面，输入相对路径"~\\TransferPage"</param>
            <param name="ErrorCode">错误码，可以为NULL</param>
            <param name="ex">异常，可以为null</param>
            <param name="SecondTransferPage">要求二次跳的页面</param>
        </member>
        <member name="M:OnLineTest.BLL.common.ShowMessageBox(System.Web.UI.Page,System.String)">
            <summary>
            以javascript形式在前台弹出提示框
            </summary>
            <param name="page">要弹框的页面类</param>
            <param name="showmessage">弹出的内容</param>
        </member>
        <member name="M:OnLineTest.BLL.common.InsertJQueryCodeByRegisterClientScriptBlock(System.Web.UI.Page,System.String,System.String)">
            <summary>
            向前台添加JQuery代码
            </summary>
            <param name="page">页面类型</param>
            <param name="JQueryCode">要注入的代码段</param>
        </member>
        <member name="M:OnLineTest.BLL.common.InsertJQueryCodeByRegisterStartupScript(System.Web.UI.Page,System.String,System.String)">
            <summary>
            向前台输出JQuery代码（此方法将代码加载在文档的最后）
            </summary>
            <param name="page"></param>
            <param name="Key"></param>
            <param name="Script"></param>
        </member>
        <member name="M:OnLineTest.BLL.common.highLight(System.String,System.String)">
            <summary>
            将内容中的某些部分高亮（可以针对所有的字符执行）
            </summary>
            <param name="keyword">要高亮显示的关键词</param>
            <param name="content">含有关键词的内容</param>
            <returns>如果内容中含有关键词将其高亮返回，如果没有，则返回内容</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.HighLight(System.Object,System.String)">
            <summary>
            将一个object类型的对象中string类型的属性进行高亮标识，并返回标识后的object对象
            </summary>
            <param name="obj">要标识的对象</param>
            <param name="keyword">要标识的关键字</param>
            <returns>经标识后的对象</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.isAuthorized(OnLineTest.Model.Users,System.String)">
            <summary>
            对于特定的网页，用户是否被授权访问
            </summary>
            <param name="user">用户实例</param>
            <param name="requestFileName">要访问的网页，且是存在授权要求的</param>
            <returns>要求授权的网页，用户没有得到授权返回false,否则返回true</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.CreateDirectory(System.String)">
            <summary>
            根据路径判断文件夹是否存在，如果存在则返回文件夹信息，如果不存在则新建并返回文件夹信息
            </summary>
            <param name="path">路径</param>
            <returns>文件夹信息</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.WordSegmentation(System.String)">
            <summary>
            利用盘古分词来分词
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.CreateIndex(System.IO.DirectoryInfo,Lucene.Net.Documents.Field[])">
             <summary>
            将一 条记录生成一条索引记录 
             </summary>
             <param name="CreateIndexDirectionPathInfo">索引记录存放的位置</param>
             <param name="field">要添加的字段</param>
        </member>
        <member name="M:OnLineTest.BLL.common.CreateField(System.String,System.String,System.Boolean,System.Boolean,System.Int32)">
             <summary>
             生成一条用于索引的字段
             </summary>
             <param name="FieldTitle">给字段的命名</param>
             <param name="IndexContent">生成索引的内容</param>
             <param name="isFieldStroe">内容是否存储</param>
             <param name="isANALYZED">内容是否索引</param>
             <param name="TermVector">   TermVector表示文档的条目（由一个Document和Field定位）和它们在当前文档中所出现的次数 
            0:Field.TermVector.YES:为每个文档（Document）存储该字段的TermVector 
            1:Field.TermVector.NO:不存储TermVector 
            2:Field.TermVector.WITH_POSITIONS:存储位置 
            3:Field.TermVector.WITH_OFFSETS:存储偏移量 
            默认值：Field.TermVector.WITH_POSITIONS_OFFSETS:存储位置和偏移量</param>
             <returns>生成的索引字段Feild</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.CreateField(System.String,System.String,System.Boolean,System.Boolean)">
             <summary>
             生成一条用于索引的字段
             </summary>
             <param name="FieldTitle">给字段的命名</param>
             <param name="IndexContent">生成索引的内容</param>
             <param name="isFieldStroe">内容是否存储</param>
             <param name="isANALYZED">内容是否索引</param>
             <param name="TermVector">   TermVector表示文档的条目（由一个Document和Field定位）和它们在当前文档中所出现的次数 
            0:Field.TermVector.YES:为每个文档（Document）存储该字段的TermVector 
            1:Field.TermVector.NO:不存储TermVector 
            2:Field.TermVector.WITH_POSITIONS:存储位置 
            3:Field.TermVector.WITH_OFFSETS:存储偏移量 
            默认值：Field.TermVector.WITH_POSITIONS_OFFSETS:存储位置和偏移量</param>
             <returns>生成的索引字段Feild</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.CreateIndexofCommnet(System.IO.DirectoryInfo,OnLineTest.Model.Comment)">
            <summary>
            将一条评论生成一条索引，其中只有CommnetContent可以检索，通过CommentId取数据
            </summary>
            <param name="directoryinfo">索引存放的位置</param>
            <param name="comment">要索引的试题，其中只有评论内容可以检索</param>
        </member>
        <member name="M:OnLineTest.BLL.common.CreateIndexofQuestion(System.IO.DirectoryInfo,OnLineTest.Model.Question)">
            <summary>
            将一条试题生成一条索引，其中有两个字段QuestionId和Question,其中Question包含试题标题和选项，可以检索，通过QuestionId取数据
            </summary>
            <param name="directoryinfo"></param>
            <param name="question"></param>
        </member>
        <member name="M:OnLineTest.BLL.common.Query(System.String,System.String,System.IO.DirectoryInfo,System.TimeSpan@,System.Int32@,System.Boolean@)">
            <summary>
            根据已经有的索引检索数据
            </summary>
            <param name="FieldTitle">检索的字段，注意，这个一定要求是索引中已经存在的</param>
            <param name="keyword">关键字、词、句</param>
            <param name="directoryinfo">索引所在的位置</param>
            <param name="costTime">检索花费的时间</param>
            <param name="CountNum">检索到的条数</param>
            <param name="CountNum">检索是否成功</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.Query(System.Type,System.String,System.IO.DirectoryInfo,System.TimeSpan@,System.Int32@,System.Boolean@)">
            <summary>
            根据已经有的索引检索数据,并返回全部的结果
            </summary>
            <param name="type"></param>
            <param name="keyword"></param>
            <param name="directoryinfo"></param>
            <param name="costTime"></param>
            <param name="CountNum"></param>
            <param name="isSuccess"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.Query(System.Type,System.String,System.IO.DirectoryInfo,System.Int32,System.Int32,System.TimeSpan@,System.Int32@,System.Boolean@)">
            <summary>
            根据已经有的索引检索数据,并返回特定数量的结果
            </summary>
            <param name="type">检索的数据类型</param>
            <param name="keyword">关键词</param>
            <param name="directoryinfo">索引目录</param>
            <param name="starIndex">返回开始的条数</param>
            <param name="retuTotalCountNum">返回的总条数</param>
            <param name="costTime">花费的时间</param>
            <param name="CountNum">获得的条数（注意，这里并不是能够搜索的所有条数，而是返回的条数+开始的返回条数的索引）</param>
            <param name="isSuccess">是否成功标志</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.tryparse(System.String)">
            <summary>
            将字符串型“A、B、C、D”转化为“1、2、3、4”
            </summary>
            <param name="p">A、B、C、D</param>
            <returns>1、2、3、4，如果返回-1，表示转化错误</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.tryparse(System.Int32)">
            <summary>
            将字符串型“A、B、C、D”转化为“1、2、3、4”
            </summary>
            <param name="p">1、2、3、4</param>
            <returns>A、B、C、D，如果返回NULL，表示转化错误</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.getCorrectAnswer(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            根据整形选择答案
            </summary>
            <param name="i"></param>
            <param name="A"></param>
            <param name="B"></param>
            <param name="C"></param>
            <param name="D"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.UpdataOrAddSuggestionKeyword(System.String)">
            <summary>
            尝试更新或者新增用户搜索关键词
            </summary>
            <param name="keywords">用户搜索的关键词</param>
        </member>
        <member name="M:OnLineTest.BLL.common.SayHelloByTime">
            <summary>
            根据时间调整问候语
            </summary>
            <returns>不同的问候语</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.GetOSNameByUserAgent(System.Web.HttpContext)">
            <summary>
            根据用户提交的数据得到用户的操作系统版本号
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.common.CreateQuestionbyRandom(System.Int32)">
            <summary>
            通过n次(参数)随机的方式从数据库中选一道试题，如果三次没有成功，则返回null
            </summary>
            <returns>null或者Question实例</returns>
        </member>
        <member name="M:OnLineTest.BLL.common.DataRowTODictionary(System.Data.DataRow)">
            <summary>
            将一个数据行转换为一个以列号为名称的字典集
            </summary>
            <param name="dr">数据行</param>
            <returns>两个情况 没有值时返回null，否则返回一个字典</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OnLineTest.BLL.common.DataSetToList(System.Data.DataSet)" -->
        <member name="T:OnLineTest.BLL.DifficultyManager">
            <summary>
            试题的难度系数实例
            </summary>
            <summary>
            试题的难度系数实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.Add(OnLineTest.Model.Difficulty)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.Update(OnLineTest.Model.Difficulty)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.DifficultyManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.ExamZoneManager">
            <summary>
            考区信息实例
            </summary>
            <summary>
            考区信息实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.Add(OnLineTest.Model.ExamZone)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.Update(OnLineTest.Model.ExamZone)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.ExamZoneManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.LogLoginManager">
            <summary>
            用户登录记录实例
            </summary>
            <summary>
            用户登录记录实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.Add(OnLineTest.Model.LogLogin)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.Update(OnLineTest.Model.LogLogin)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogLoginManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.LogPracticeManager">
            <summary>
            记录平时练习的习题实
            </summary>
            <summary>
            记录平时练习的习题实
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.Add(OnLineTest.Model.LogPractice)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.Update(OnLineTest.Model.LogPractice)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogPracticeManager.getLastModel(System.Int32,System.Int32)">
            <summary>
            根据给出的id,要求获取同一个用户的上一条记录
            </summary>
            <param name="Currentlogpracticeid">当前ID</param>
            <param name="userid">用户ID</param>
            <returns>返回当前用户的上一次记录</returns>
        </member>
        <member name="T:OnLineTest.BLL.LogTestManager">
            <summary>
            保存平时测试信息实例
            </summary>
            <summary>
            保存平时测试信息实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.Add(OnLineTest.Model.LogTest)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.Update(OnLineTest.Model.LogTest)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetModels(System.Int32,System.String,System.Int32)">
            <summary>
            按要求返回多个实例对象
            </summary>
            <param name="num">返回的对象数量</param>
            <param name="orderby">返回的是前几个对象，排序的原则</param>
            <returns>返回前几条对象</returns>
        </member>
        <member name="M:OnLineTest.BLL.LogTestManager.GetModelsbyJoin(System.Int32,System.String,System.Int32)">
            <summary>
            按要求返回多个实例，并将所有的外链填充
            </summary>
            <param name="num"></param>
            <param name="orderby"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="T:OnLineTest.BLL.LogTestQuestionManager">
            <summary>
            保存平时测试试题实例
            </summary>
            <summary>
            保存平时测试试题实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.Add(OnLineTest.Model.LogTestQuestion)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.Update(OnLineTest.Model.LogTestQuestion)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.LogTestQuestionManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.Message_tableManager">
            <summary>
            站内信实例
            </summary>
            <summary>
            站内信实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.Add(OnLineTest.Model.Message_table)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.Update(OnLineTest.Model.Message_table)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.sendNum(System.Int32)">
            <summary>
            查询某个id的发信数量
            </summary>
            <param name="userid">发件人</param>
            <returns>发信的数量</returns>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.recerveNum(System.Int32)">
            <summary>
            收信数量
            </summary>
            <param name="userid">收件人</param>
            <returns>收件数量</returns>
        </member>
        <member name="M:OnLineTest.BLL.Message_tableManager.NotReadMessageNum(System.Int32)">
            <summary>
            未读信数量
            </summary>
            <param name="userid">收件人</param>
            <returns>未读信数量</returns>
        </member>
        <member name="T:OnLineTest.BLL.PaperCodesManager">
            <summary>
            试卷代码实例
            </summary>
            <summary>
            试卷代码实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.Exists(System.Int32,System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.Add(OnLineTest.Model.PaperCodes)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.Update(OnLineTest.Model.PaperCodes)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.Delete(System.Int32,System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.GetPaperCodeAndInstantiation(System.String)">
            <summary>
            按strWhere的要求查询papercodes,并将其中的外链进行实例化
            </summary>
            <param name="strWhere">查询条件或者排序方式，如：order by papercodeid</param>
            <returns>list</returns>
        </member>
        <member name="M:OnLineTest.BLL.PaperCodesManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OnLineTest.BLL.PaperCodesManager.GetModelListBySubjectId(System.Int32)" -->
        <member name="T:OnLineTest.BLL.PastExamPaperManager">
            <summary>
            历年真题信息实例(仅
            </summary>
            <summary>
            历年真题信息实例(仅
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.Add(OnLineTest.Model.PastExamPaper)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.Update(OnLineTest.Model.PastExamPaper)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.PastExamPaperManager.Exists(System.Int32,System.Int32,System.Int32)">
            <summary>
            是否存在该记录
            </summary>
            <param name="PaperCodeId"></param>
            <param name="ExamZoneId"></param>
            <param name="PastExamPaperPeriodNo"></param>
            <returns></returns>
        </member>
        <member name="T:OnLineTest.BLL.QuestionManager">
            <summary>
            试题实例
            </summary>
            <summary>
            试题实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.Add(OnLineTest.Model.Question)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.Update(OnLineTest.Model.Question)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetListByPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            通过联合查询的方式获得question，并将其中的外链进行实例化
            其中获取的试题是用户上传的，已经审核通过的，没有被删除的数据
            </summary>
            <param name="pagesize">每次取得的数据条数</param>
            <param name="orderby">排序</param>
            <param name="pagenum">页码值（其中取值是从pagesize*pagenum开始取值）</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetAllUpLoadedQuestionByPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            通过联合查询的方式获得question，并将其中的外链进行实例化
            获取用户上传的所有，包括审核未通过的，没有审核的，已经软删除的等等
            </summary>
            <param name="pagesize">每次取得的数据条数</param>
            <param name="pagenum">页码值，即从哪一条开始取值</param>
            <param name="userid">用户</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetQuestionAndInstantiationById(System.Int32)">
            <summary>
            根据ID获取试题并实例化所有外链
            </summary>
            <param name="QuestionId">id</param>
            <returns>返回一个字典</returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetQuestionAndInstantiationModelById(System.Int32)">
            <summary>
            根据ID获取试题并实例化所有外链，并以对象的形式返回
            </summary>
            <param name="questionid">ID</param>
            <returns>所以ID不为空的外链对象</returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.UpdataQuestionFinalVerifyByTransaction(System.Int32,System.Boolean,System.Int32)">
            <summary>
            利用事务更新试题的最终审核状态
            其中一、更新Question表的状态
                二、在Verify表中插入一条新的数据
            </summary>
            <param name="questionId">试题ID</param>
            <param name="passable">审核的结果，是否通过</param>
            <param name="userid">审核用户ID</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.CreateSimulatePaper(System.Int32,System.Collections.Generic.Dictionary{OnLineTest.Model.Chapter,System.Int32},System.Int32)">
            <summary>
            生成一个模拟试卷的试题
            </summary>
            <param name="textbookid">试卷适用的教材</param>
            <param name="dic">一个字典，包括教材中每章节所选取试题的数量</param>
            <param name="difficulty">难度系数</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.getQuestionByPapercodeidANDRand(System.Int32,System.Int32,OnLineTest.Model.LogPractice@)">
            <summary>
            根据给定的papercodeid随机抽取一条记录并实例化,并新增一个记录进入了logpractice
            </summary>
            <param name="papercodeid">你懂的</param>
            <param name="logpractice">新增的测试记录</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.handlerupORdown(System.Int32,System.Int32)">
            <summary>
            根据用户提交的upORdown以及QUESTIONID修改试题的顶或踩的值,upORdown=1为顶，upORdown=-1为踩
            </summary>
            <param name="questionid">试题id</param>
            <param name="upORdown">顶或者踩</param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.Add(System.Collections.Generic.List{OnLineTest.Model.Question})">
            <summary>
            添加多个question对象,没有使用事务
            </summary>
            <param name="list">多个对象的列表</param>
            <returns>成功返true,不成功返回false</returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.getQuestionbyRandom">
            <summary>
            随机产生一个试题
            </summary>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.QuestionManager.GetModel(System.String,System.String)">
            <summary>
            按要求排序，获取第一个试题
            </summary>
            <param name="strWhere"></param>
            <param name="orderby"></param>
            <returns></returns>
        </member>
        <member name="T:OnLineTest.BLL.SubjectManager">
            <summary>
            科目实例
            </summary>
            <summary>
            用户组
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.Add(OnLineTest.Model.Subject)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.Update(OnLineTest.Model.Subject)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SubjectManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.SuggestionKeywordManager">
            <summary>
            SuggestionKeywordManager
            </summary>
            <summary>
            SuggestionKeywordManager
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.Add(OnLineTest.Model.SuggestionKeyword)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.Update(OnLineTest.Model.SuggestionKeyword)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.SuggestionKeywordManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.TextBookManager">
            <summary>
            教材实例
            </summary>
            <summary>
            教材实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.Add(OnLineTest.Model.TextBook)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.Update(OnLineTest.Model.TextBook)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.TextBookManager.GetModel(System.String)">
            <summary>
            根据书名获得textbook列表
            </summary>
            <param name="textbookname"></param>
            <returns></returns>
        </member>
        <member name="T:OnLineTest.BLL.UserAuthorityManager">
            <summary>
            用户权限实例
            </summary>
            <summary>
            用户权限实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.Add(OnLineTest.Model.UserAuthority)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.Update(OnLineTest.Model.UserAuthority)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.Exists(OnLineTest.Model.Users,OnLineTest.Model.Authority)">
            <summary>
            查询该用户是否存在某项权限
            </summary>
            <param name="user"></param>
            <param name="authority"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.Exists(System.Int32,System.Int32,System.Int32)">
            <summary>
            查询某条记录是否存在
            </summary>
            <param name="user"></param>
            <param name="authority"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.Exists(OnLineTest.Model.Authority)">
            <summary>
            查询某项权限是否被引用
            </summary>
            <param name="authority"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.UserAuthorityManager.GetListLeftOuterJoinAuthority(System.String)">
            <summary>
            获得用户权限列表并向右联合查询到对应的Authority
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.UserCreatePaperManager">
            <summary>
            保存用户生存试卷信息
            </summary>
            <summary>
            保存用户生存试卷信息
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.Add(OnLineTest.Model.UserCreatePaper)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.Update(OnLineTest.Model.UserCreatePaper)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.UserCreatePaperQuestioneManager">
            <summary>
            保存用户生成试卷的试
            </summary>
            <summary>
            保存用户生成试卷的试
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.Add(OnLineTest.Model.UserCreatePaperQuestione)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.Update(OnLineTest.Model.UserCreatePaperQuestione)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserCreatePaperQuestioneManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.UserGroupManager">
            <summary>
            用户组实例
            </summary>
            <summary>
            用户组实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.Exists(System.String,System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.Add(OnLineTest.Model.UserGroup)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.Update(OnLineTest.Model.UserGroup)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.Delete(System.String,System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetModel(System.String)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserGroupManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="T:OnLineTest.BLL.UserRankManager">
            <summary>
            用户等级实例
            </summary>
            <summary>
            用户等级实例
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.Exists(System.String,System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.Add(OnLineTest.Model.UserRank)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.Update(OnLineTest.Model.UserRank)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.Delete(System.String,System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetModel(OnLineTest.Model.Users)">
            <summary>
            得到用户等级实例，根据用户的论坛分值
            </summary>
            <param name="UserScore">用户论坛分值</param>
            <returns>返回用户等级实例</returns>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserRankManager.GetNextRank(System.Int32)">
            <summary>
            得到当前用户的下一个等级
            </summary>
            <param name="userid">当前用户</param>
            <returns>userrank</returns>
        </member>
        <member name="T:OnLineTest.BLL.UserScoreDetailManager">
            <summary>
            用户论坛分的得分详细
            </summary>
            <summary>
            用户论坛分的得分详细
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.Add(OnLineTest.Model.UserScoreDetail)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.Update(OnLineTest.Model.UserScoreDetail)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.shouru_total(System.Int32,System.Int32@)">
            <summary>
            计算某个用户收入总和
            </summary>
            <param name="userid">用户id</param>
            <param name="num">总条数</param>
            <returns>收入总和</returns>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.shouru_total(System.Int32)">
            <summary>
            计算某个用户收入总和
            </summary>
            <param name="userid">用户id</param>
            <returns>收入总和</returns>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.zhichu_total(System.Int32,System.Int32@)">
            <summary>
            计算某个用户支出总和
            </summary>
            <param name="userid">用户id</param>
            <param name="num">总条数</param>
            <returns>支出总和</returns>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.zhichu_total(System.Int32)">
            <summary>
            计算某个用户支出总和
            </summary>
            <param name="userid">用户id</param>
            <returns>支出总和</returns>
        </member>
        <member name="M:OnLineTest.BLL.UserScoreDetailManager.userscoredetail(System.Int32)">
            <summary>
            根据用户id，联合查询某个用户的得分明细，其中包括三个模型：userscoredetail,userauthority,authoriy
            </summary>
            <param name="userid">用户ID</param>
            <returns>返回一个联合查询结果的数据集</returns>
        </member>
        <member name="T:OnLineTest.BLL.UsersManager">
            <summary>
            用户实例
            </summary>
            <summary>
            用户定义的BLL层内的用户管理 部分类
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.Exists(System.String,System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.Add(OnLineTest.Model.Users)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.Update(OnLineTest.Model.Users)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.Delete(System.String,System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.Exists(System.String,System.String,System.Int32@)">
            <summary>
            是否存在该用户实例，并得到存在的数量
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.GetModel(System.String)">
            <summary>
            得到用户实例，根据用户名
            </summary>
            <param name="UserName"></param>
            <returns></returns>
        </member>
        <member name="M:OnLineTest.BLL.UsersManager.paiming(System.Int32)">
            <summary>
            得到当前用户的分数排名
            </summary>
            <param name="userid">当前用户</param>
            <returns>排名</returns>
        </member>
        <member name="T:OnLineTest.BLL.VerifyStatusManager">
            <summary>
            试题在审核过程中的状
            </summary>
            <summary>
            试题在审核过程中的状
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetMaxId">
            <summary>
            得到最大ID
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.Exists(System.Int32)">
            <summary>
            是否存在该记录
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.Add(OnLineTest.Model.VerifyStatus)">
            <summary>
            增加一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.Update(OnLineTest.Model.VerifyStatus)">
            <summary>
            更新一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.Delete(System.Int32)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.DeleteList(System.String)">
            <summary>
            删除一条数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetModel(System.Int32)">
            <summary>
            得到一个对象实体
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetModelByCache(System.Int32)">
            <summary>
            得到一个对象实体，从缓存中
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetList(System.Int32,System.String,System.String)">
            <summary>
            获得前几行数据
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetModelList(System.String)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.DataTableToList(System.Data.DataTable)">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetAllList">
            <summary>
            获得数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetRecordCount(System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.GetListByPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="M:OnLineTest.BLL.VerifyStatusManager.Add(OnLineTest.Model.VerifyStatus,OnLineTest.Model.Question)">
            <summary>
            新增一条审核记录
            此处应 新增一条审核记录 同时 修改 Question表中相应记录的 VerifyTimes 记录
            故 此处采用 事务处理
            </summary>
            <param name="v">insert VerifyStatus</param>
            <param name="q">updata Question</param>
            <returns>新增的审核记录的VerifyStatusId</returns>
        </member>
        <member name="M:BLL.Mail.Send(System.String,System.String,System.String)">
            <summary>
            发送邮件方法
            </summary>
            <param name="to">收件人</param>
            <param name="subject">主题</param>
            <param name="body">邮件内容</param>
            <returns>成功为true,失败为false</returns>
        </member>
        <member name="M:BLL.Mail.Send(System.String,System.String,System.String,System.String)">
            <summary>
            发送邮件方法
            </summary>
            <param name="to">收件人</param>
            <param name="subject">主题</param>
            <param name="body">邮件内容</param>
            <param name="appSettingsKey">关于发件人信息在config中的配置节点名称</param>
            <returns>成功为true,失败为false</returns>
        </member>
        <member name="M:BLL.Mail.Send(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary> 
            发送邮件程序 
            </summary> 
            <param name="from">发送人邮件地址</param> 
            <param name="fromname">发送人显示名称</param> 
            <param name="to">发送给谁（邮件地址）</param> 
            <param name="subject">标题</param> 
            <param name="body">内容</param> 
            <param name="username">邮件登录名</param> 
            <param name="password">邮件密码</param> 
            <param name="server">邮件服务器</param> 
            <param name="fujian">附件</param> 
            <returns>send ok</returns> 
            调用方法 SendMail("abc@126.com", "某某人", "cba@126.com", "你好", "我测试下邮件", "邮箱登录名", "邮箱密码", "smtp.126.com", ""); 
        </member>
    </members>
</doc>
